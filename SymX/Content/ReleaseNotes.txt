RELEASE NOTES:
4.1 (November 2024) - UNSUPPORTED RELEASE
THIS IS THE LAST EVER RELEASE

I got annoyed using symx so I decided to fix it

* Removed NuCore.Utilities and merged the parts of ite actually used into the main application
* Updated from .NET 6.0 to .NET 9.0
* Logging::Init now called before parsing configuration
* Updated copyright from 2022 to 2022-2024
* Removed SymX-UI
* Removed never functional pdb file mode
* All builds can use an unlimited thread count
* Fixed the stupid ordering required by the command line parsing
* Allow nativeaot builds. This should make the code faster, but it's still VERY terrible and unoptimised

4.0.0 Alpha 5.0x (May 22, 2023) - UNSUPPORTED RELEASE:
* Overwrite CSV files.
* Support CSV files with dates after December 31, 9999.

4.0.0 Alpha 4.1 (September 6, 2022):
* Fixed literally everything being broken unless you put a dummy arg at the start
* Fixed help text for 000admin
* Fixed symx -mode <mode name> with nothing else redirecting you to general help (symx -help obviously still works)
* Fixed shorthand for -inipath

4.0.0 Alpha 4 (September 6, 2022):
* Fixed bug where some error messages would act as if no error occurred.
* Added error condition for passing a non-CSV file into CSV Import mode.
* Removed remaining MassView string.
* Rewrote command-line handling.
* Changed command-line syntax - CHECK HELP FOR THE NEW SYNTAX
* File metadata now prints the filename so that you know what file each piece of metadata is for
* Fixed bug where SymX always claimed another instance was running
* Refactored HTTP client handling
* SymX now tells you when it is clearing log files
* Fixed INI file loading with non-default INI paths

NEW FUNCTIONALITY:
For real symbol servers (not MSDL), SymX will now parse the /000Admin folder if you use -mode Parse000Admin. 
This will download all of the symstore in most cases. However, there are some cases (such as nvidia's server) where it wipes history.txt every time they push a new version, so it will only grab the latest version.

KNOWN ISSUE:
Cosmetic: "Logger not initialised" may be printed at start

Very sorry for the delay. Been busy with other stuff.

4.0.0 Alpha 3 (July 19, 2022):
* Added configurability. Settings can be optionally stored in SymX.ini, and will be loaded from it if it exists. 
Additionally, you can use the -inipath option in order to specify a custom INI to load.
* Fixed a crash when -outfile specified a folder or file that already existed.
* Fixed a crash on zero byte files
* Minor refactoring to remove some redundant code in the CSV generation mode
* Got rid of all remaining independent MassView branding
* Rewrote help to specify it by section
* SymX will now not create SuccessfulURLs.log if it detects another instance of SymX is running.
* SymX will no longer try to download nonexistent files during the download stage.
* Changed strings to reflect fact that SymX supports more symbol servers than just the official Microsoft symbol server.

4.0.0 Alpha 2.2 (July 14, 2022):
* Fixed successful downloads sometimes not incrementing

4.0.0 Alpha 2.1 (June 26, 2022):
* Fixed -numdownloads

4.0.0 Alpha 2 (June 26, 2022):
* Downloads are now multithreaded! By default, the number of threads used for downloading will be set to -numthreads (except if it is above 15, where it will be set to 15). However, if you want to override the value, you can use -numdownloads.
* SymX now measures download speed and file size and displays it when verbosity is verbose.
* SymX now obtains the Last-Modified date (only valid for dates after 6/11/2017 due to the Azure move) and displays it on verbose verbosity.
* Old logs are now automatically deleted on startup.
* Reduced log size a bit on normal verbosity by not logging as many things to file.
* Refactoring in NuCore and additional logging functionality
* Added -nologo if you hate version numbers for some reason 
* SymX now deletes partially downloaded files if they fail to download. This fixes the "zero-byte" file issue.
* Fixed -numthreads not being bounded when using -infile

3.1.0 Alpha 1 (June 10, 2022):
* Added a proper user interface with a progress bar
* Added overwrite prevention: The number at the start of the file will be incremented if it exists.
* -recursive option: Allows MassView to recursively search for CSV files
* Text changes
* Fixed help file issues
* Fixed SuccessfulURLs.log (but it may only work after it completes the scan)
* Refactoring

This build does not yet include automatic restart after a certain amount of time or multithreaded downloading, or some other features I have planned for this version of SymX.

3.0.3 (May 31, 2022):
* Fix -filename not actually being required

3.0.2 (May 30, 2022 20:20):
* Fix percentage (i am extremely dumb)
* More minor refactoring

3.0.1 (May 30, 2022 20:05):
* Fix quiet verbosity not actually downloading any files
* Fix retry count not being reset for each file
* Hopefully fix "9/8" retries bug
* Fix file download count always being 12 behind
* Very minor code refactoring
* Fix minor typo in help 

3.0.0 (May 29, 2022 15:15):
* More grammatical fixes in help, readme, and in some strings

RC 2 (May 29, 2022 13:46):
* Fixed help

RC 1 (May 29, 2022 13:40):
* Fixed bug where the folder specified by -outfolder would not be created in some cases.
* Changed text colours around a bit
* Fixed typos in text
* Increased default retry count from 5 to 8
* Added additional command-line parsing error messages
* Added handling for when SuccessfulURLs.log is already open
* Fixed bug where custom symbol servers were not respected by MassView

Alpha 5 (May 28, 2022 21:30): 
* SymX will now try to resume downloads a number of times before failing. -maxretries will control this value - the default is 5.
* Fixed URLs per second always being 0 bug
* Added -symbolserverurl: Allows you to use a custom symbol server url for download tools. The default is https://msdl.microsoft.com/download/symbols
* Added -useragentvendor and -useragentversion. These do not work with the default Microsoft symbol server and are only used for custom symbol servers.
* Fixed command line parsing bug where -start, -end, -imagesize, and -filename needed to be passed when supplying -infile
* Added -outfolder to change the file download output folder. Default is /download in the root directory. A slash is automatically appended.
* Fixed some minor bugs with text
* Added new icon to SymX.exe

Alpha 4 (May 28, 2022 13:15):
* Added -infile - will attempt to download all files from a CSV generated with -generatecsv (this only works with Alpha 4-generated CSVs due to the lack of a properly functional URL column)
* Fixed invalid MassView URL generation bug
* Download report now reports URLs per second
* Fixed multiple file downloading always using the file name of the first file found
* Added a temporary file generated with the list of successful links. Useful if it goes over scrollback or you crash. -dontgeneratetempfile / -dtemp suppresses the generation of this log file.
* Added vanity logo in \Content
* Added timeout handling. 
* Implemented -hextime / -h option, which will interpret the -start and -end parameters as a hex-format 
* Refactoring and code cleanup
* Now outputs how many URLs failed to download or timed out
* Now outputs URLs per second rate
* Successful URLs are now outputted in green 

Alpha 3 (May 23, 2022):
* MassView is now integrated! Use -generatecsv in combination with -csvinfolder and -csvoutfile
* Fixed MassView not working with read only files
* Added URL field to MassView
* Refactoring
* Fixed bug with files being added to the download queue hundreds of thousands of times
* Kind of allowed multiple file downloads (a number is prepended so it isn't overwritten)
* Fixed typos in the help file
* Mitigated issue where Verbose mode + -l option randomly crashed (and spewed 0x00 to the log file), something to do with thread safety
* Verbose mode is even more verbose

Alpha 2 (May 22, 2022)
* Initial release

Changes from msdlurlgen 2.6.0:
* Fully rewritten in C# and .NET 6.0
* Y2K38 compliance
* Multithreading! (over an order of magnitude faster)
* Logging!
* Different levels of verbosity!
* Ability to specify a range of image sizes!
* MassView merged in
* Ability to download files from a CSV
* Hex time support!
* Overridable user-agent and support for non-Microsoft symbol servers
* Downloading multiple files!
* Changing the output directory!
